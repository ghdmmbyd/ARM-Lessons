#include "uart.h"
#include "stdio.h"
#include "command.h"
//#include <stdio.h>

#define WTCON *(volatile int *)0x53000000
#define GPBCON *(volatile int *)0x56000010
#define GPBDAT *(volatile int *)0x56000014

void sys_init(void)
{
	WTCON = 0;//disable watch dog
	
	GPBCON |= 1<<0;//disable beeper
	GPBCON &= ~(1<<1);	
	GPBDAT = 0x0;
}

int shell_parse2(char * buf, char * argv[])
{
	int argc = 0;
	int state = 0;
	int input = 0;
	
	while (*buf)
	{
		//input = get_input_type(*buf);
		if (*buf == ' ')
			input = 0;
		else
			input = 1;
		
		switch (state)
		{
			case 0:
				switch (input)
				{
					case 0: // ' '						
						break;
					case 1: // abc
						argv[argc++] = buf;
						state = 1;
						break;
				}
				break;
			case 1:	
				switch (input)
				{
					case 0: // ' '
						*buf = '\0';
						state = 0;
						break;
					case 1: // abc					
						break;
				}	
				break;
		}	
		buf++;
	}

	return argc;
}

int shell_parse(char * buf, char * argv[])
{
	int argc = 0;
	int state = 0;

	while (*buf != '\0')
	{
		if (*buf != ' ' && state == 0)
		{
			argv[argc++] = buf;
			state = 1;
		}
		
		if (*buf == ' ' && state == 1)
		{
			*buf = '\0';
			state = 0;
		}
			
		buf++;
	}
	
	return argc;
}

int a = 0;

int mymain()
{
	//char c;
	char buf[100];
	int argc;
	char * argv[5];
	int i = 0;
	
	sys_init();
	
	uart_init();	
	
	printf("a = %d\n", a);
	
	puts("\nWelcome to my boot 1.0! \n");
	
	printf("buf %c is %s, %d, %x %x \n", 'A', "abcd", 100, 101, 100);
	
	while(1)
	{
		puts("myboot> ");
		gets(buf);
		printf("input command is <%s> \n", buf);
		
		argc = shell_parse2(buf, argv);
		for (i = 0; i < argc; i++)
			printf("argv[%d] is <%s> \n", i, argv[i]);
			
		printf("command is <%s> \n", argv[0]);
		command_do_main(argc, argv);
	}
}