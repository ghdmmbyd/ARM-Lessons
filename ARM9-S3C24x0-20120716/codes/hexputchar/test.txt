
========================================================================

** ELF Header Information

    File Name: test.axf

    Machine class: ELFCLASS32 (32-bit)
    Data encoding: ELFDATA2LSB (Little endian)
    Header version: EV_CURRENT (Current version)
    File Type: ET_EXEC (Executable) (2)
    Machine: EM_ARM (ARM)

    Image Entry point: Not specified
    Flags: EF_ARM_SYMSARESORTED + EF_ARM_MAPSYMSFIRST (0x02000014)

    EABI conformance : ARM EABI Version 2.

    Built with
    ARM C Compiler, ADS1.2 [Build 805]
    ARM/Thumb Macro Assembler vsn ADS1.2 [Build 805]
    ARM Linker, ADS1.2 [Build 805] 

    Header size: 52 bytes (0x34)
    Program header entry size: 32 bytes (0x20)
    Section header entry size: 40 bytes (0x28)

    Program header entries: 1
    Section header entries: 8

    Program header offset: 1432 (0x00000598)
    Section header offset: 1464 (0x000005b8)

    Section header string table index: 7

========================================================================

** Program header #0 (PT_LOAD) [PF_X + PF_R]
    Size : 352 bytes
    Virtual address: 0x00008000


========================================================================

** Section #1 'ER_RO' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 352 bytes (alignment 4)
    Address: 0x00008000

    $a
    start
        0x00008000:    ea000028    (...    B        uart_test  ; 0x80a8
    uart_putchar
    .text
        0x00008004:    e3a01450    P...    MOV      r1,#0x50000000
        0x00008008:    e5810020     ...    STR      r0,[r1,#0x20]
        0x0000800c:    e3a00000    ....    MOV      r0,#0
        0x00008010:    e2800001    ....    ADD      r0,r0,#1
        0x00008014:    e250cd80    ..P.    SUBS     r12,r0,#0x2000
        0x00008018:    a25cce71    q.\.    SUBGES   r12,r12,#0x710
        0x0000801c:    bafffffb    ....    BLT      0x8010
        0x00008020:    e1a0f00e    ....    MOV      pc,r14
    uart_hexputchar
        0x00008024:    e52de004    ..-.    STR      r14,[r13,#-4]!
        0x00008028:    e1a03000    .0..    MOV      r3,r0
        0x0000802c:    e28f2014    . ..    ADD      r2,pc,#0x14 ; #0x8048
        0x00008030:    e7d20220     ...    LDRB     r0,[r2,r0,LSR #4]
        0x00008034:    ebfffff2    ....    BL       uart_putchar  ; 0x8004
        0x00008038:    e203000f    ....    AND      r0,r3,#0xf
        0x0000803c:    e7d20000    ....    LDRB     r0,[r2,r0]
        0x00008040:    e49de004    ....    LDR      r14,[r13],#4
        0x00008044:    eaffffee    ....    B        uart_putchar  ; 0x8004
    $d
        0x00008048:    33323130    0123    DCD    858927408
        0x0000804c:    37363534    4567    DCD    926299444
        0x00008050:    62613938    89ab    DCD    1650538808
        0x00008054:    66656463    cdef    DCD    1717920867
        0x00008058:    00000000    ....    DCD    0
    uart_hexputint
    $a
        0x0000805c:    e92d4010    .@-.    STMFD    r13!,{r4,r14}
        0x00008060:    e1a04000    .@..    MOV      r4,r0
        0x00008064:    e1a00c20     ...    MOV      r0,r0,LSR #24
        0x00008068:    ebffffed    ....    BL       uart_hexputchar  ; 0x8024
        0x0000806c:    e1a00404    ....    MOV      r0,r4,LSL #8
        0x00008070:    e1a00c20     ...    MOV      r0,r0,LSR #24
        0x00008074:    ebffffea    ....    BL       uart_hexputchar  ; 0x8024
        0x00008078:    e1a00804    ....    MOV      r0,r4,LSL #16
        0x0000807c:    e1a00c20     ...    MOV      r0,r0,LSR #24
        0x00008080:    ebffffe7    ....    BL       uart_hexputchar  ; 0x8024
        0x00008084:    e20400ff    ....    AND      r0,r4,#0xff
        0x00008088:    e8bd4010    .@..    LDMFD    r13!,{r4,r14}
        0x0000808c:    eaffffe4    ....    B        uart_hexputchar  ; 0x8024
    print_hex
        0x00008090:    e52de004    ..-.    STR      r14,[r13,#-4]!
        0x00008094:    e5900000    ....    LDR      r0,[r0,#0]
        0x00008098:    ebffffef    ....    BL       uart_hexputint  ; 0x805c
        0x0000809c:    e3a00020     ...    MOV      r0,#0x20
        0x000080a0:    e49de004    ....    LDR      r14,[r13],#4
        0x000080a4:    eaffffd6    ....    B        uart_putchar  ; 0x8004
    uart_test
        0x000080a8:    e52de004    ..-.    STR      r14,[r13,#-4]!
        0x000080ac:    e59f00a0    ....    LDR      r0,0x8154
        0x000080b0:    ebfffff6    ....    BL       print_hex  ; 0x8090
        0x000080b4:    e59f009c    ....    LDR      r0,0x8158
        0x000080b8:    e49de004    ....    LDR      r14,[r13],#4
        0x000080bc:    eafffff3    ....    B        print_hex  ; 0x8090
    test
        0x000080c0:    e92d4030    0@-.    STMFD    r13!,{r4,r5,r14}
        0x000080c4:    e3a0e450    P...    MOV      r14,#0x50000000
        0x000080c8:    e3a05062    bP..    MOV      r5,#0x62
        0x000080cc:    e3a04061    a@..    MOV      r4,#0x61
        0x000080d0:    e3a01000    ....    MOV      r1,#0
        0x000080d4:    e3a03456    V4..    MOV      r3,#0x56000000
        0x000080d8:    e5930014    ....    LDR      r0,[r3,#0x14]
        0x000080dc:    e3802001    . ..    ORR      r2,r0,#1
        0x000080e0:    e5832014    . ..    STR      r2,[r3,#0x14]
        0x000080e4:    e58e4020     @..    STR      r4,[r14,#0x20]
        0x000080e8:    e3a00000    ....    MOV      r0,#0
        0x000080ec:    e2800001    ....    ADD      r0,r0,#1
        0x000080f0:    e250caf4    ..P.    SUBS     r12,r0,#0xf4000
        0x000080f4:    a25ccf90    ..\.    SUBGES   r12,r12,#0x240
        0x000080f8:    bafffffb    ....    BLT      0x80ec
        0x000080fc:    e3c20001    ....    BIC      r0,r2,#1
        0x00008100:    e5830014    ....    STR      r0,[r3,#0x14]
        0x00008104:    e58e5020     P..    STR      r5,[r14,#0x20]
        0x00008108:    e3a00000    ....    MOV      r0,#0
        0x0000810c:    e2800001    ....    ADD      r0,r0,#1
        0x00008110:    e250caf4    ..P.    SUBS     r12,r0,#0xf4000
        0x00008114:    a25ccf90    ..\.    SUBGES   r12,r12,#0x240
        0x00008118:    bafffffb    ....    BLT      0x810c
        0x0000811c:    e2811001    ....    ADD      r1,r1,#1
        0x00008120:    e3510003    ..Q.    CMP      r1,#3
        0x00008124:    baffffeb    ....    BLT      0x80d8
        0x00008128:    e8bd8030    0...    LDMFD    r13!,{r4,r5,pc}
    abcd
        0x0000812c:    e52de004    ..-.    STR      r14,[r13,#-4]!
        0x00008130:    e3a00001    ....    MOV      r0,#1
        0x00008134:    e3a01456    V...    MOV      r1,#0x56000000
        0x00008138:    e5810010    ....    STR      r0,[r1,#0x10]
        0x0000813c:    ebffffdf    ....    BL       test  ; 0x80c0
        0x00008140:    e59f0014    ....    LDR      r0,0x815c
        0x00008144:    e3a0144c    L...    MOV      r1,#0x4c000000
        0x00008148:    e5810004    ....    STR      r0,[r1,#4]
        0x0000814c:    ebffffdb    ....    BL       test  ; 0x80c0
        0x00008150:    eafffffe    ....    B        0x8150
    $d
        0x00008154:    4c000004    ...L    DCD    1275068420
        0x00008158:    4c000014    ...L    DCD    1275068436
        0x0000815c:    00049022    "...    DCD    299042

** Section #2 '.debug_frame' (SHT_PROGBITS)
    Size   : 232 bytes


** Section #3 '.symtab' (SHT_SYMTAB)
    Size   : 288 bytes (alignment 4)
    String table '.strtab'
    Last local symbol no. 9


** Section #4 '.strtab' (SHT_STRTAB)
    Size   : 200 bytes


** Section #5 '.note' (SHT_NOTE)
    Size   : 20 bytes (alignment 4)


** Section #6 '.comment' (SHT_PROGBITS)
    Size   : 204 bytes


** Section #7 '.shstrtab' (SHT_STRTAB)
    Size   : 84 bytes


