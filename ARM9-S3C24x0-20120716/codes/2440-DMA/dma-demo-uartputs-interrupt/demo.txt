
========================================================================

** ELF Header Information

    File Name: demo.axf

    Machine class: ELFCLASS32 (32-bit)
    Data encoding: ELFDATA2LSB (Little endian)
    Header version: EV_CURRENT (Current version)
    File Type: ET_EXEC (Executable) (2)
    Machine: EM_ARM (ARM)

    Image Entry point: 0x30000000
    Flags: EF_ARM_HASENTRY + EF_ARM_SYMSARESORTED + EF_ARM_MAPSYMSFIRST (0x02000016)

    EABI conformance : ARM EABI Version 2.

    Built with
    ARM C Compiler, ADS1.2 [Build 805]
    ARM/Thumb Macro Assembler vsn ADS1.2 [Build 805]
    ARM Linker, ADS1.2 [Build 805] 

    Header size: 52 bytes (0x34)
    Program header entry size: 32 bytes (0x20)
    Section header entry size: 40 bytes (0x28)

    Program header entries: 1
    Section header entries: 9

    Program header offset: 1472 (0x000005c0)
    Section header offset: 1504 (0x000005e0)

    Section header string table index: 8

========================================================================

** Program header #0 (PT_LOAD) [PF_X + PF_W + PF_R + PF_ARM_ENTRY]
    Size : 380 bytes
    Virtual address: 0x30000000


========================================================================

** Section #1 'ER_RO' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 372 bytes (alignment 4)
    Address: 0x30000000

    $a
    demo
        0x30000000:    e3a0dd40    @...    MOV      r13,#0x1000
        0x30000004:    ea00002d    -...    B        c_entry  ; 0x300000c0
    asm_irq_handler
        0x30000008:    e3a0de80    ....    MOV      r13,#0x800
        0x3000000c:    e92d5fff    ._-.    STMFD    r13!,{r0-r12,r14}
        0x30000010:    eb00000c    ....    BL       irq_handler  ; 0x30000048
        0x30000014:    e8bd5fff    ._..    LDMFD    r13!,{r0-r12,r14}
        0x30000018:    e25ef004    ..^.    SUBS     pc,r14,#4
    uart_putchar
    .text
        0x3000001c:    e3a02450    P$..    MOV      r2,#0x50000000
        0x30000020:    e5921010    ....    LDR      r1,[r2,#0x10]
        0x30000024:    e3110004    ....    TST      r1,#4
        0x30000028:    0afffffc    ....    BEQ      0x30000020
        0x3000002c:    e5820020     ...    STR      r0,[r2,#0x20]
        0x30000030:    e1a0f00e    ....    MOV      pc,r14
    delay
        0x30000034:    e3a00000    ....    MOV      r0,#0
        0x30000038:    e2800001    ....    ADD      r0,r0,#1
        0x3000003c:    e3500940    @.P.    CMP      r0,#0x100000
        0x30000040:    bafffffc    ....    BLT      0x30000038
        0x30000044:    e1a0f00e    ....    MOV      pc,r14
    irq_handler
        0x30000048:    e52de004    ..-.    STR      r14,[r13,#-4]!
        0x3000004c:    e3a0005e    ^...    MOV      r0,#0x5e
        0x30000050:    ebfffff1    ....    BL       uart_putchar  ; 0x3000001c
        0x30000054:    e3a00b80    ....    MOV      r0,#0x20000
        0x30000058:    e3a0144a    J...    MOV      r1,#0x4a000000
        0x3000005c:    e5810000    ....    STR      r0,[r1,#0]
        0x30000060:    e5810010    ....    STR      r0,[r1,#0x10]
        0x30000064:    e59f10ec    ....    LDR      r1,0x30000158
        0x30000068:    e5910000    ....    LDR      r0,[r1,#0]
        0x3000006c:    e2802001    . ..    ADD      r2,r0,#1
        0x30000070:    e5812000    . ..    STR      r2,[r1,#0]
        0x30000074:    e5910004    ....    LDR      r0,[r1,#4]
        0x30000078:    e2400001    ..@.    SUB      r0,r0,#1
        0x3000007c:    e5810004    ....    STR      r0,[r1,#4]
        0x30000080:    e5d21000    ....    LDRB     r1,[r2,#0]
        0x30000084:    e3510000    ..Q.    CMP      r1,#0
        0x30000088:    0a00000a    ....    BEQ      0x300000b8
        0x3000008c:    e3a0144b    K...    MOV      r1,#0x4b000000
        0x30000090:    e5812000    . ..    STR      r2,[r1,#0]
        0x30000094:    e5912010    . ..    LDR      r2,[r1,#0x10]
        0x30000098:    e1a02a22    "*..    MOV      r2,r2,LSR #20
        0x3000009c:    e1a02a02    .*..    MOV      r2,r2,LSL #20
        0x300000a0:    e5812010    . ..    STR      r2,[r1,#0x10]
        0x300000a4:    e5912010    . ..    LDR      r2,[r1,#0x10]
        0x300000a8:    e1820000    ....    ORR      r0,r2,r0
        0x300000ac:    e5810010    ....    STR      r0,[r1,#0x10]
        0x300000b0:    e3a00002    ....    MOV      r0,#2
        0x300000b4:    e5810020     ...    STR      r0,[r1,#0x20]
        0x300000b8:    e49de004    ....    LDR      r14,[r13],#4
        0x300000bc:    eaffffdc    ....    B        delay  ; 0x30000034
    c_entry
        0x300000c0:    e59f0094    ....    LDR      r0,0x3000015c
        0x300000c4:    e3a01000    ....    MOV      r1,#0
        0x300000c8:    e5810018    ....    STR      r0,[r1,#0x18]
        0x300000cc:    e59f008c    ....    LDR      r0,0x30000160
        0x300000d0:    e5810020     ...    STR      r0,[r1,#0x20]
        0x300000d4:    e3a00450    P...    MOV      r0,#0x50000000
        0x300000d8:    e5902004    . ..    LDR      r2,[r0,#4]
        0x300000dc:    e382200a    . ..    ORR      r2,r2,#0xa
        0x300000e0:    e5802004    . ..    STR      r2,[r0,#4]
        0x300000e4:    e5902004    . ..    LDR      r2,[r0,#4]
        0x300000e8:    e3c22005    . ..    BIC      r2,r2,#5
        0x300000ec:    e5802004    . ..    STR      r2,[r0,#4]
        0x300000f0:    e59f0060    `...    LDR      r0,0x30000158
        0x300000f4:    e5902000    . ..    LDR      r2,[r0,#0]
        0x300000f8:    e3a0044b    K...    MOV      r0,#0x4b000000
        0x300000fc:    e5802000    . ..    STR      r2,[r0,#0]
        0x30000100:    e5801004    ....    STR      r1,[r0,#4]
        0x30000104:    e59f1058    X...    LDR      r1,0x30000164
        0x30000108:    e5801008    ....    STR      r1,[r0,#8]
        0x3000010c:    e3a01003    ....    MOV      r1,#3
        0x30000110:    e580100c    ....    STR      r1,[r0,#0xc]
        0x30000114:    e3a01770    p...    MOV      r1,#0x1c00000
        0x30000118:    e5801010    ....    STR      r1,[r0,#0x10]
        0x3000011c:    e5901010    ....    LDR      r1,[r0,#0x10]
        0x30000120:    e3811009    ....    ORR      r1,r1,#9
        0x30000124:    e5801010    ....    STR      r1,[r0,#0x10]
        0x30000128:    e5901010    ....    LDR      r1,[r0,#0x10]
        0x3000012c:    e3811580    ....    ORR      r1,r1,#0x20000000
        0x30000130:    e5801010    ....    STR      r1,[r0,#0x10]
        0x30000134:    e3a01002    ....    MOV      r1,#2
        0x30000138:    e5801020     ...    STR      r1,[r0,#0x20]
        0x3000013c:    e3a0044a    J...    MOV      r0,#0x4a000000
        0x30000140:    e5901008    ....    LDR      r1,[r0,#8]
        0x30000144:    e3c11b80    ....    BIC      r1,r1,#0x20000
        0x30000148:    e5801008    ....    STR      r1,[r0,#8]
        0x3000014c:    e3a00053    S...    MOV      r0,#0x53
        0x30000150:    e12ff000    ../.    MSR      CPSR_cxsf,r0
        0x30000154:    eafffffe    ....    B        0x30000154
    $d
        0x30000158:    30000174    t..0    DCD    805306740
        0x3000015c:    e59ff000    ....    DCD    3852464128
    $f
        0x30000160:    30000008    ...0    DCD    805306376
        0x30000164:    50000020     ..P    DCD    1342177312
    .constdata$1
    $d
    .constdata
        0x30000168:    34333231    1234    DCD    875770417
        0x3000016c:    38373635    5678    DCD    943142453
        0x30000170:    00000039    9...    DCD    57

** Section #2 'ER_RW' (SHT_PROGBITS) [SHF_ALLOC + SHF_WRITE]
    Size   : 8 bytes (alignment 4)
    Address: 0x30000174

    0x30000174:   68 01 00 30 09 00 00 00                            h..0....


** Section #3 '.debug_frame' (SHT_PROGBITS)
    Size   : 120 bytes


** Section #4 '.symtab' (SHT_SYMTAB)
    Size   : 368 bytes (alignment 4)
    String table '.strtab'
    Last local symbol no. 15

    Symbol table .symtab (22 symbols, 15 local)

      #  Symbol Name                Value      Bind  Sec  Type  Size
    ========================================================================

      1  $m                         0x00000006   Lc  Abs   -- 
      2  $a                         0x30000000   Lc    1  Code
      3  $d                         0x30000158   Lc    1  Data
      4  $f                         0x30000160   Lc    1  Data
      5  $d                         0x30000168   Lc    1  Data
      6  $d                         0x30000174   Lc    2  Data
      7  start.s                    0x00000000   Lc  Abs  File
      8  demo                       0x30000000   Lc    1  Sect  0x1c
      9  main.c                     0x00000000   Lc  Abs  File
     10  .text                      0x3000001c   Lc    1  Sect
     11  .data                      0x30000174   Lc    2  Sect
     12  .constdata                 0x30000168   Lc    1  Sect
     13  .constdata$1               0x30000168   Lc    1  Data
     14  .data$0                    0x30000174   Lc    2  Data
     15  size@irq_handler_0         0x30000178   Lc    2  Data  0x4
     16  BuildAttributes$$ARM_ISAv4$M$PE$A:L22$X:L11$S22$~IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE
                                    0x00000000   Gb  Abs   -- 
     17  asm_irq_handler            0x30000008   Gb    1  Code
     18  uart_putchar               0x3000001c   Gb    1  Code  0x18
     19  delay                      0x30000034   Gb    1  Code  0x14
     20  irq_handler                0x30000048   Gb    1  Code  0x78
     21  c_entry                    0x300000c0   Gb    1  Code  0x98
     22  p                          0x30000174   Gb    2  Data  0x4


** Section #5 '.strtab' (SHT_STRTAB)
    Size   : 240 bytes


** Section #6 '.note' (SHT_NOTE)
    Size   : 24 bytes (alignment 4)


** Section #7 '.comment' (SHT_PROGBITS)
    Size   : 204 bytes


** Section #8 '.shstrtab' (SHT_STRTAB)
    Size   : 84 bytes


